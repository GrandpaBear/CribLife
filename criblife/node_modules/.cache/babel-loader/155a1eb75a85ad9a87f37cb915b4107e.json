{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jianying Chiang\\\\Documents\\\\GitHub\\\\CribLife\\\\criblife\\\\src\\\\components\\\\map\\\\mapWithMarkers.jsx\";\nimport React, { Component } from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport \"./mapWithMarkers.scss\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\n\nconst createMapOptions = function () {\n  return {\n    zoomControl: true,\n    mapTypeControl: true,\n    scaleControl: true,\n    streetViewControl: false,\n    rotateControl: false,\n    fullscreenControl: false\n  };\n};\n\nconst MapWithMarkers = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap)(props => React.createElement(GoogleMap, {\n  options: this.createMapOptions,\n  defaultZoom: 13,\n  defaultCenter: {\n    lat: 42.357064,\n    lng: -71.062577\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(MarkerWithInfoWindow, {\n  position: {\n    lat: 42.3381437,\n    lng: -71.0475773\n  },\n  content: \"South Boston\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), React.createElement(MarkerWithInfoWindow, {\n  position: {\n    lat: 42.3875968,\n    lng: -71.0994968\n  },\n  content: \"Somervil\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"floating-panel\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \"asdf\")));\n\nclass MarkerWithInfoWindow extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false\n    };\n    this.onToggleOpen = this.onToggleOpen.bind(this);\n  }\n\n  onToggleOpen() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.position,\n      onClick: this.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(InfoWindow, {\n      onCloseClick: this.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.props.content)));\n  }\n\n}\n\nexport default MapWithMarkers; // MapContainer = GoogleApiWrapper({\n//   apiKey: \"AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48\"\n// })(MapContainer);","map":{"version":3,"sources":["C:/Users/Jianying Chiang/Documents/GitHub/CribLife/criblife/src/components/map/mapWithMarkers.jsx"],"names":["React","Component","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","createMapOptions","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","MapWithMarkers","googleMapURL","loadingElement","height","containerElement","mapElement","props","lat","lng","MarkerWithInfoWindow","constructor","state","isOpen","onToggleOpen","bind","setState","render","position","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,OAAO,uBAAP;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,mBANP;;AAQA,MAAMC,gBAAgB,GAAG,YAAW;AAClC,SAAO;AACLC,IAAAA,WAAW,EAAE,IADR;AAELC,IAAAA,cAAc,EAAE,IAFX;AAGLC,IAAAA,YAAY,EAAE,IAHT;AAILC,IAAAA,iBAAiB,EAAE,KAJd;AAKLC,IAAAA,aAAa,EAAE,KALV;AAMLC,IAAAA,iBAAiB,EAAE;AANd,GAAP;AAQD,CATD;;AAWA,MAAMC,cAAc,GAAGd,OAAO,CAC5BC,SAAS,CAAC;AACRc,EAAAA,YAAY,EACV,uHAFM;AAGRC,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAG;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR;AAIRC,EAAAA,gBAAgB,EAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAG;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJV;AAKRE,EAAAA,UAAU,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAG;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ,CAAD,CADmB,EAQ5Bf,YAR4B,EAS5BC,aAT4B,CAAP,CAUrBiB,KAAK,IACL,oBAAC,SAAD;AACE,EAAA,OAAO,EAAE,KAAKb,gBADhB;AAEE,EAAA,WAAW,EAAE,EAFf;AAGE,EAAA,aAAa,EAAE;AAAEc,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE,CAAC;AAAxB,GAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKE,oBAAC,oBAAD;AACE,EAAA,QAAQ,EAAE;AAAED,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,GAAG,EAAE,CAAC;AAAzB,GADZ;AAEE,EAAA,OAAO,EAAC,cAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,EASE,oBAAC,oBAAD;AACE,EAAA,QAAQ,EAAE;AAAED,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,GAAG,EAAE,CAAC;AAAzB,GADZ;AAEE,EAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EATF,EAaE;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbF,CAXqB,CAAvB;;AA4BA,MAAMC,oBAAN,SAAmCzB,KAAK,CAACC,SAAzC,CAAmD;AACjDyB,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACb,SAAKE,QAAL,CAAc;AACZH,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADR,KAAd;AAGD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWW,QAA7B;AAAuC,MAAA,OAAO,EAAE,KAAKJ,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,MAAX,IACC,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKP,KAAL,CAAWY,OAAhB,CADF,CAFJ,CADF;AASD;;AAzBgD;;AA4BnD,eAAelB,cAAf,C,CAEA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\r\nimport { compose, withProps } from \"recompose\";\r\nimport \"./mapWithMarkers.scss\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow\r\n} from \"react-google-maps\";\r\n\r\nconst createMapOptions = function() {\r\n  return {\r\n    zoomControl: true,\r\n    mapTypeControl: true,\r\n    scaleControl: true,\r\n    streetViewControl: false,\r\n    rotateControl: false,\r\n    fullscreenControl: false\r\n  };\r\n};\r\n\r\nconst MapWithMarkers = compose(\r\n  withProps({\r\n    googleMapURL:\r\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48&libraries=geometry,drawing,places\",\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: `100%` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props => (\r\n  <GoogleMap\r\n    options={this.createMapOptions}\r\n    defaultZoom={13}\r\n    defaultCenter={{ lat: 42.357064, lng: -71.062577 }}\r\n  >\r\n    <MarkerWithInfoWindow\r\n      position={{ lat: 42.3381437, lng: -71.0475773 }}\r\n      content=\"South Boston\"\r\n    />\r\n    <MarkerWithInfoWindow\r\n      position={{ lat: 42.3875968, lng: -71.0994968 }}\r\n      content=\"Somervil\"\r\n    />\r\n    <div className=\"floating-panel\">asdf</div>\r\n  </GoogleMap>\r\n));\r\n\r\nclass MarkerWithInfoWindow extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n    this.onToggleOpen = this.onToggleOpen.bind(this);\r\n  }\r\n\r\n  onToggleOpen() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Marker position={this.props.position} onClick={this.onToggleOpen}>\r\n        {this.state.isOpen && (\r\n          <InfoWindow onCloseClick={this.onToggleOpen}>\r\n            <h3>{this.props.content}</h3>\r\n          </InfoWindow>\r\n        )}\r\n      </Marker>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapWithMarkers;\r\n\r\n// MapContainer = GoogleApiWrapper({\r\n//   apiKey: \"AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48\"\r\n// })(MapContainer);\r\n"]},"metadata":{},"sourceType":"module"}