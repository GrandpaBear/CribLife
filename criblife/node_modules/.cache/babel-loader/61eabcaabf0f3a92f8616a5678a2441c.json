{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jianying Chiang\\\\Documents\\\\GitHub\\\\CribLife\\\\criblife\\\\src\\\\components\\\\map\\\\marker\\\\detailedMarker.jsx\";\nimport React from \"react\";\nimport MarkerIconActive from \"../../../images/markerIconActive.png\";\nimport MarkerIconInactive from \"../../../images/markerIconInactive.png\";\nimport { Marker } from \"react-google-maps\";\nexport class DetailedMarker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listingId: this.props.listingId,\n      markerIcon: this.props.markerIconInactive,\n      isSelected: this.props.isSelected,\n      label: this.props.content\n    };\n    this.onToggleSelection = this.onToggleSelection.bind(this);\n    this.onMouseOverMarker = this.onMouseOverMarker.bind(this);\n    this.onMouseOutMarker = this.onMouseOutMarker.bind(this);\n  }\n\n  onToggleSelection() {\n    this.setState({\n      isSelected: true\n    }); // if (this.props.isSelected == true) {\n    //   this.setState({\n    //     markerIcon: MarkerIconActive\n    //   });\n    // }\n\n    this.props.resetMarkers(this.state.listingId);\n  }\n\n  onMouseOverMarker() {\n    if (!this.state.isSelected) {\n      this.setState({\n        markerIcon: MarkerIconActive\n      });\n    }\n  }\n\n  onMouseOutMarker() {\n    if (!this.state.isSelected) {\n      this.setState({\n        markerIcon: MarkerIconInactive\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props.isSelected);\n    return React.createElement(Marker, {\n      position: this.props.position,\n      onClick: () => this.onToggleSelection(),\n      label: {\n        text: this.state.label,\n        color: \"#FFFFFF\",\n        fontFamily: \"Avenir-Bold\",\n        fontSize: \"14px\"\n      },\n      onMouseOver: () => this.onMouseOverMarker(),\n      onMouseOut: () => this.onMouseOutMarker(),\n      options: {\n        icon: this.props.isSelected ? MarkerIconActive : this.state.markerIcon\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jianying Chiang/Documents/GitHub/CribLife/criblife/src/components/map/marker/detailedMarker.jsx"],"names":["React","MarkerIconActive","MarkerIconInactive","Marker","DetailedMarker","Component","constructor","props","state","listingId","markerIcon","markerIconInactive","isSelected","label","content","onToggleSelection","bind","onMouseOverMarker","onMouseOutMarker","setState","resetMarkers","render","console","log","position","text","color","fontFamily","fontSize","icon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,OAAO,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SADX;AAEXC,MAAAA,UAAU,EAAE,KAAKH,KAAL,CAAWI,kBAFZ;AAGXC,MAAAA,UAAU,EAAE,KAAKL,KAAL,CAAWK,UAHZ;AAIXC,MAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO;AAJP,KAAb;AAMA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDD,EAAAA,iBAAiB,GAAG;AAClB,SAAKI,QAAL,CAAc;AACZP,MAAAA,UAAU,EAAE;AADA,KAAd,EADkB,CAIlB;AACA;AACA;AACA;AACA;;AACA,SAAKL,KAAL,CAAWa,YAAX,CAAwB,KAAKZ,KAAL,CAAWC,SAAnC;AACD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKT,KAAL,CAAWI,UAAhB,EAA4B;AAC1B,WAAKO,QAAL,CAAc;AACZT,QAAAA,UAAU,EAAET;AADA,OAAd;AAGD;AACF;;AAEDiB,EAAAA,gBAAgB,GAAG;AACjB,QAAI,CAAC,KAAKV,KAAL,CAAWI,UAAhB,EAA4B;AAC1B,WAAKO,QAAL,CAAc;AACZT,QAAAA,UAAU,EAAER;AADA,OAAd;AAGD;AACF;;AAEDmB,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWK,UAAvB;AACA,WACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWiB,QADvB;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKT,iBAAL,EAFjB;AAGE,MAAA,KAAK,EAAE;AACLU,QAAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWK,KADZ;AAELa,QAAAA,KAAK,EAAE,SAFF;AAGLC,QAAAA,UAAU,EAAE,aAHP;AAILC,QAAAA,QAAQ,EAAE;AAJL,OAHT;AASE,MAAA,WAAW,EAAE,MAAM,KAAKX,iBAAL,EATrB;AAUE,MAAA,UAAU,EAAE,MAAM,KAAKC,gBAAL,EAVpB;AAWE,MAAA,OAAO,EAAE;AACPW,QAAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWK,UAAX,GAAwBX,gBAAxB,GAA2C,KAAKO,KAAL,CAAWE;AADrD,OAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAiBD;;AA7DiD","sourcesContent":["import React from \"react\";\r\nimport MarkerIconActive from \"../../../images/markerIconActive.png\";\r\nimport MarkerIconInactive from \"../../../images/markerIconInactive.png\";\r\nimport { Marker } from \"react-google-maps\";\r\n\r\nexport class DetailedMarker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listingId: this.props.listingId,\r\n      markerIcon: this.props.markerIconInactive,\r\n      isSelected: this.props.isSelected,\r\n      label: this.props.content\r\n    };\r\n    this.onToggleSelection = this.onToggleSelection.bind(this);\r\n    this.onMouseOverMarker = this.onMouseOverMarker.bind(this);\r\n    this.onMouseOutMarker = this.onMouseOutMarker.bind(this);\r\n  }\r\n\r\n  onToggleSelection() {\r\n    this.setState({\r\n      isSelected: true\r\n    });\r\n    // if (this.props.isSelected == true) {\r\n    //   this.setState({\r\n    //     markerIcon: MarkerIconActive\r\n    //   });\r\n    // }\r\n    this.props.resetMarkers(this.state.listingId);\r\n  }\r\n\r\n  onMouseOverMarker() {\r\n    if (!this.state.isSelected) {\r\n      this.setState({\r\n        markerIcon: MarkerIconActive\r\n      });\r\n    }\r\n  }\r\n\r\n  onMouseOutMarker() {\r\n    if (!this.state.isSelected) {\r\n      this.setState({\r\n        markerIcon: MarkerIconInactive\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.isSelected);\r\n    return (\r\n      <Marker\r\n        position={this.props.position}\r\n        onClick={() => this.onToggleSelection()}\r\n        label={{\r\n          text: this.state.label,\r\n          color: \"#FFFFFF\",\r\n          fontFamily: \"Avenir-Bold\",\r\n          fontSize: \"14px\"\r\n        }}\r\n        onMouseOver={() => this.onMouseOverMarker()}\r\n        onMouseOut={() => this.onMouseOutMarker()}\r\n        options={{\r\n          icon: this.props.isSelected ? MarkerIconActive : this.state.markerIcon\r\n        }}\r\n      ></Marker>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}