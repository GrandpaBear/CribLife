{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jianying Chiang\\\\Documents\\\\GitHub\\\\CribLife\\\\criblife\\\\src\\\\components\\\\map\\\\detailedMarker.jsx\";\nexport class DetailedMarker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markerIcon: MarkerIconInactive,\n      isSelected: false,\n      label: this.props.content\n    };\n    this.onToggleSelection = this.onToggleSelection.bind(this);\n    this.onMouseOverMarker = this.onMouseOverMarker.bind(this);\n    this.onMouseOutMarker = this.onMouseOutMarker.bind(this);\n  }\n\n  resetMarker() {\n    this.setState({\n      markerIcon: MarkerIconInactive,\n      isSelected: false\n    });\n  }\n\n  onToggleSelection() {\n    this.setState({\n      isSelected: !this.state.isSelected\n    });\n\n    if (this.state.isSelected) {\n      this.onMouseOverMarker();\n    } else {\n      this.onMouseOutMarker();\n    }\n  }\n\n  onMouseOverMarker() {\n    if (!this.state.isSelected) {\n      this.setState({\n        markerIcon: MarkerIconActive\n      });\n    }\n  }\n\n  onMouseOutMarker() {\n    if (!this.state.isSelected) {\n      this.setState({\n        markerIcon: MarkerIconInactive\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.position,\n      onClick: this.onToggleSelection,\n      label: {\n        text: this.state.label,\n        color: \"#FFFFFF\",\n        fontFamily: \"Avenir-Bold\",\n        fontSize: \"14px\"\n      },\n      onMouseOver: this.onMouseOverMarker,\n      onMouseOut: this.onMouseOutMarker,\n      options: {\n        icon: this.state.markerIcon\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jianying Chiang/Documents/GitHub/CribLife/criblife/src/components/map/detailedMarker.jsx"],"names":["DetailedMarker","React","Component","constructor","props","state","markerIcon","MarkerIconInactive","isSelected","label","content","onToggleSelection","bind","onMouseOverMarker","onMouseOutMarker","resetMarker","setState","MarkerIconActive","render","position","text","color","fontFamily","fontSize","icon"],"mappings":";AAAA,OAAO,MAAMA,cAAN,SAA6BC,KAAK,CAACC,SAAnC,CAA6C;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAEC,kBADD;AAEXC,MAAAA,UAAU,EAAE,KAFD;AAGXC,MAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM;AAHP,KAAb;AAKA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDG,EAAAA,WAAW,GAAG;AACZ,SAAKC,QAAL,CAAc;AACZV,MAAAA,UAAU,EAAEC,kBADA;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAAd;AAID;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKK,QAAL,CAAc;AACZR,MAAAA,UAAU,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADZ,KAAd;;AAGA,QAAI,KAAKH,KAAL,CAAWG,UAAf,EAA2B;AACzB,WAAKK,iBAAL;AACD,KAFD,MAEO;AACL,WAAKC,gBAAL;AACD;AACF;;AAEDD,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKR,KAAL,CAAWG,UAAhB,EAA4B;AAC1B,WAAKQ,QAAL,CAAc;AACZV,QAAAA,UAAU,EAAEW;AADA,OAAd;AAGD;AACF;;AAEDH,EAAAA,gBAAgB,GAAG;AACjB,QAAI,CAAC,KAAKT,KAAL,CAAWG,UAAhB,EAA4B;AAC1B,WAAKQ,QAAL,CAAc;AACZV,QAAAA,UAAU,EAAEC;AADA,OAAd;AAGD;AACF;;AAEDW,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWe,QADvB;AAEE,MAAA,OAAO,EAAE,KAAKR,iBAFhB;AAGE,MAAA,KAAK,EAAE;AACLS,QAAAA,IAAI,EAAE,KAAKf,KAAL,CAAWI,KADZ;AAELY,QAAAA,KAAK,EAAE,SAFF;AAGLC,QAAAA,UAAU,EAAE,aAHP;AAILC,QAAAA,QAAQ,EAAE;AAJL,OAHT;AASE,MAAA,WAAW,EAAE,KAAKV,iBATpB;AAUE,MAAA,UAAU,EAAE,KAAKC,gBAVnB;AAWE,MAAA,OAAO,EAAE;AAAEU,QAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWC;AAAnB,OAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAeD;;AA/DiD","sourcesContent":["export class DetailedMarker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      markerIcon: MarkerIconInactive,\r\n      isSelected: false,\r\n      label: this.props.content\r\n    };\r\n    this.onToggleSelection = this.onToggleSelection.bind(this);\r\n    this.onMouseOverMarker = this.onMouseOverMarker.bind(this);\r\n    this.onMouseOutMarker = this.onMouseOutMarker.bind(this);\r\n  }\r\n\r\n  resetMarker() {\r\n    this.setState({\r\n      markerIcon: MarkerIconInactive,\r\n      isSelected: false\r\n    });\r\n  }\r\n\r\n  onToggleSelection() {\r\n    this.setState({\r\n      isSelected: !this.state.isSelected\r\n    });\r\n    if (this.state.isSelected) {\r\n      this.onMouseOverMarker();\r\n    } else {\r\n      this.onMouseOutMarker();\r\n    }\r\n  }\r\n\r\n  onMouseOverMarker() {\r\n    if (!this.state.isSelected) {\r\n      this.setState({\r\n        markerIcon: MarkerIconActive\r\n      });\r\n    }\r\n  }\r\n\r\n  onMouseOutMarker() {\r\n    if (!this.state.isSelected) {\r\n      this.setState({\r\n        markerIcon: MarkerIconInactive\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Marker\r\n        position={this.props.position}\r\n        onClick={this.onToggleSelection}\r\n        label={{\r\n          text: this.state.label,\r\n          color: \"#FFFFFF\",\r\n          fontFamily: \"Avenir-Bold\",\r\n          fontSize: \"14px\"\r\n        }}\r\n        onMouseOver={this.onMouseOverMarker}\r\n        onMouseOut={this.onMouseOutMarker}\r\n        options={{ icon: this.state.markerIcon }}\r\n      ></Marker>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}