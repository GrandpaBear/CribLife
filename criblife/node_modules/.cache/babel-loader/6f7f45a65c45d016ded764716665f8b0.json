{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jianying Chiang\\\\Documents\\\\GitHub\\\\CribLife\\\\criblife\\\\src\\\\components\\\\map\\\\mapWithMarkers.jsx\";\nimport React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport \"./mapWithMarkers.scss\";\nimport MarkerIconActive from \"../../images/markerIconActive.png\";\nimport MarkerIconInactive from \"../../images/markerIconInactive.png\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nconst _require = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\"),\n      MarkerWithLabel = _require.MarkerWithLabel;\n\nconst defaultMapOptions = {\n  zoomControl: true,\n  mapTypeControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  rotateControl: false,\n  fullscreenControl: false,\n  clickableIcons: false\n};\nconst MapWithMarkers = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap)(props => React.createElement(GoogleMap, {\n  options: defaultMapOptions,\n  defaultZoom: 13,\n  defaultCenter: {\n    lat: 42.357064,\n    lng: -71.062577\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, props.listings.map(listing => {\n  return React.createElement(MarkerWithInfoWindow, {\n    position: listing.position,\n    content: listing.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  });\n}), React.createElement(\"div\", {\n  className: \"floating-panel\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, \"asdf\")));\n\nconst displayMarker = listing => {\n  console.log(listing.content);\n  return React.createElement(MarkerWithInfoWindow, {\n    position: listing.position,\n    content: listing.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  });\n};\n\nclass MarkerWithInfoWindow extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      markerIcon: MarkerIconInactive,\n      label: \"$344\"\n    };\n    this.onToggleSelection = this.onToggleSelection.bind(this);\n    this.onMouseOverMarker = this.onMouseOverMarker.bind(this);\n    this.onMouseOutMarker = this.onMouseOutMarker.bind(this);\n  }\n\n  onToggleSelection() {\n    this.setState({\n      isSelected: !this.state.isSelected\n    });\n  }\n\n  onMouseOverMarker() {\n    this.setState({\n      label: \"nig\",\n      markerIcon: MarkerIconActive\n    });\n  }\n\n  onMouseOutMarker() {\n    this.setState({\n      label: \"pig\",\n      markerIcon: MarkerIconInactive\n    });\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.position,\n      onClick: this.onToggleSelection,\n      label: this.state.label,\n      onMouseOver: this.onMouseOverMarker,\n      onMouseOut: this.onMouseOutMarker,\n      options: {\n        icon: this.state.markerIcon\n      },\n      style: {\n        fill: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default MapWithMarkers; // MapContainer = GoogleApiWrapper({\n//   apiKey: \"AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48\"\n// })(MapContainer);","map":{"version":3,"sources":["C:/Users/Jianying Chiang/Documents/GitHub/CribLife/criblife/src/components/map/mapWithMarkers.jsx"],"names":["React","compose","withProps","MarkerIconActive","MarkerIconInactive","withScriptjs","withGoogleMap","GoogleMap","Marker","require","MarkerWithLabel","defaultMapOptions","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","clickableIcons","MapWithMarkers","googleMapURL","loadingElement","height","containerElement","mapElement","props","lat","lng","listings","map","listing","position","content","displayMarker","console","log","MarkerWithInfoWindow","Component","constructor","state","markerIcon","label","onToggleSelection","bind","onMouseOverMarker","onMouseOutMarker","setState","isSelected","render","icon","fill"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { compose, withProps } from \"recompose\";\r\nimport \"./mapWithMarkers.scss\";\r\nimport MarkerIconActive from \"../../images/markerIconActive.png\";\r\nimport MarkerIconInactive from \"../../images/markerIconInactive.png\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker\r\n} from \"react-google-maps\";\r\nconst {\r\n  MarkerWithLabel\r\n} = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\");\r\n\r\nconst defaultMapOptions = {\r\n  zoomControl: true,\r\n  mapTypeControl: false,\r\n  scaleControl: false,\r\n  streetViewControl: false,\r\n  rotateControl: false,\r\n  fullscreenControl: false,\r\n  clickableIcons: false\r\n};\r\n\r\nconst MapWithMarkers = compose(\r\n  withProps({\r\n    googleMapURL:\r\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48&libraries=geometry,drawing,places\",\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: `100%` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props => (\r\n  <GoogleMap\r\n    options={defaultMapOptions}\r\n    defaultZoom={13}\r\n    defaultCenter={{ lat: 42.357064, lng: -71.062577 }}\r\n  >\r\n    {props.listings.map(listing => {\r\n      return (\r\n        <MarkerWithInfoWindow\r\n          position={listing.position}\r\n          content={listing.content}\r\n        />\r\n      );\r\n    })}\r\n    <div className=\"floating-panel\">asdf</div>\r\n  </GoogleMap>\r\n));\r\n\r\nconst displayMarker = listing => {\r\n  console.log(listing.content);\r\n  return (\r\n    <MarkerWithInfoWindow\r\n      position={listing.position}\r\n      content={listing.content}\r\n    />\r\n  );\r\n};\r\n\r\nclass MarkerWithInfoWindow extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      markerIcon: MarkerIconInactive,\r\n      label: \"$344\"\r\n    };\r\n    this.onToggleSelection = this.onToggleSelection.bind(this);\r\n    this.onMouseOverMarker = this.onMouseOverMarker.bind(this);\r\n    this.onMouseOutMarker = this.onMouseOutMarker.bind(this);\r\n  }\r\n\r\n  onToggleSelection() {\r\n    this.setState({\r\n      isSelected: !this.state.isSelected\r\n    });\r\n  }\r\n\r\n  onMouseOverMarker() {\r\n    this.setState({\r\n      label: \"nig\",\r\n      markerIcon: MarkerIconActive\r\n    });\r\n  }\r\n\r\n  onMouseOutMarker() {\r\n    this.setState({\r\n      label: \"pig\",\r\n      markerIcon: MarkerIconInactive\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Marker\r\n        position={this.props.position}\r\n        onClick={this.onToggleSelection}\r\n        label={this.state.label}\r\n        onMouseOver={this.onMouseOverMarker}\r\n        onMouseOut={this.onMouseOutMarker}\r\n        options={{ icon: this.state.markerIcon }}\r\n        style={{ fill: \"red\" }}\r\n      ></Marker>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapWithMarkers;\r\n\r\n// MapContainer = GoogleApiWrapper({\r\n//   apiKey: \"AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48\"\r\n// })(MapContainer);\r\n"]},"metadata":{},"sourceType":"module"}