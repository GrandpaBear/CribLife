{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jianying Chiang\\\\Documents\\\\GitHub\\\\CribLife\\\\criblife\\\\src\\\\components\\\\map\\\\mapWithMarkers.jsx\";\nimport React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport \"./mapWithMarkers.scss\";\nimport { withScriptjs, withGoogleMap, GoogleMap, google, map } from \"react-google-maps\";\n\nconst _require = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\"),\n      MarkerWithLabel = _require.MarkerWithLabel;\n\nconst defaultMapOptions = {\n  zoomControl: true,\n  mapTypeControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  rotateControl: false,\n  fullscreenControl: false,\n  clickableIcons: false\n};\nvar marker = new google.maps.Marker({\n  position: {\n    lat: 42.357064,\n    lng: -71.062577\n  },\n  map: map,\n  icon: \"../../images/clock.png\"\n});\nconst MapWithMarkers = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap)(props => React.createElement(GoogleMap, {\n  options: defaultMapOptions,\n  defaultZoom: 13,\n  defaultCenter: {\n    lat: 42.357064,\n    lng: -71.062577\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, props.listings.map(listing => {\n  return React.createElement(MarkerWithInfoWindow, {\n    position: listing.position,\n    content: listing.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  });\n}), React.createElement(\"div\", {\n  className: \"floating-panel\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, \"asdf\")));\n\nconst displayMarker = listing => {\n  console.log(listing.content);\n  return React.createElement(MarkerWithInfoWindow, {\n    position: listing.position,\n    content: listing.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  });\n};\n\nclass MarkerWithInfoWindow extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isSelected: false\n    };\n    this.onToggleSelection = this.onToggleSelection.bind(this);\n  }\n\n  onToggleSelection() {\n    this.setState({\n      isSelected: !this.state.isSelected\n    });\n\n    if (this.state.isSelected === true) {\n      this.setState({\n        color: \"blue\"\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"marker\", {\n      position: this.props.position,\n      onClick: this.onToggleSelection,\n      label: \"$34\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default MapWithMarkers; // MapContainer = GoogleApiWrapper({\n//   apiKey: \"AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48\"\n// })(MapContainer);","map":{"version":3,"sources":["C:/Users/Jianying Chiang/Documents/GitHub/CribLife/criblife/src/components/map/mapWithMarkers.jsx"],"names":["React","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","google","map","require","MarkerWithLabel","defaultMapOptions","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","clickableIcons","marker","maps","Marker","position","lat","lng","icon","MapWithMarkers","googleMapURL","loadingElement","height","containerElement","mapElement","props","listings","listing","content","displayMarker","console","log","MarkerWithInfoWindow","Component","constructor","state","isSelected","onToggleSelection","bind","setState","color","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { compose, withProps } from \"recompose\";\r\nimport \"./mapWithMarkers.scss\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  google,\r\n  map\r\n} from \"react-google-maps\";\r\nconst {\r\n  MarkerWithLabel\r\n} = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\");\r\n\r\nconst defaultMapOptions = {\r\n  zoomControl: true,\r\n  mapTypeControl: false,\r\n  scaleControl: false,\r\n  streetViewControl: false,\r\n  rotateControl: false,\r\n  fullscreenControl: false,\r\n  clickableIcons: false\r\n};\r\n\r\nvar marker = new google.maps.Marker({\r\n  position: { lat: 42.357064, lng: -71.062577 },\r\n  map: map,\r\n  icon: \"../../images/clock.png\"\r\n});\r\n\r\nconst MapWithMarkers = compose(\r\n  withProps({\r\n    googleMapURL:\r\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48&libraries=geometry,drawing,places\",\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: `100%` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props => (\r\n  <GoogleMap\r\n    options={defaultMapOptions}\r\n    defaultZoom={13}\r\n    defaultCenter={{ lat: 42.357064, lng: -71.062577 }}\r\n  >\r\n    {props.listings.map(listing => {\r\n      return (\r\n        <MarkerWithInfoWindow\r\n          position={listing.position}\r\n          content={listing.content}\r\n        />\r\n      );\r\n    })}\r\n    <div className=\"floating-panel\">asdf</div>\r\n  </GoogleMap>\r\n));\r\n\r\nconst displayMarker = listing => {\r\n  console.log(listing.content);\r\n  return (\r\n    <MarkerWithInfoWindow\r\n      position={listing.position}\r\n      content={listing.content}\r\n    />\r\n  );\r\n};\r\n\r\nclass MarkerWithInfoWindow extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isSelected: false\r\n    };\r\n    this.onToggleSelection = this.onToggleSelection.bind(this);\r\n  }\r\n\r\n  onToggleSelection() {\r\n    this.setState({\r\n      isSelected: !this.state.isSelected\r\n    });\r\n    if (this.state.isSelected === true) {\r\n      this.setState({\r\n        color: \"blue\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <marker\r\n        position={this.props.position}\r\n        onClick={this.onToggleSelection}\r\n        label=\"$34\"\r\n      ></marker>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapWithMarkers;\r\n\r\n// MapContainer = GoogleApiWrapper({\r\n//   apiKey: \"AIzaSyBvaYrU3bnm60a1X4gyhULxiO-5gqhVi48\"\r\n// })(MapContainer);\r\n"]},"metadata":{},"sourceType":"module"}